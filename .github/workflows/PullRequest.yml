name: Pull Request Validation ESLint

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history to enable proper diffing

      - name: Authenticate with JFrog
        run: |
          echo "//tr1.jfrog.io/tr1/api/npm/npm/:_auth=${{ secrets.JFROG_AUTH_TOKEN }}" > ~/.npmrc
          echo "//tr1.jfrog.io/tr1/api/npm/npm/:always-auth=true" >> ~/.npmrc
          echo "email=${{ secrets.NPM_EMAIL }}" >> ~/.npmrc
          echo "registry=https://tr1.jfrog.io/tr1/api/npm/npm/" >> ~/.npmrc

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./pablo-sand-box
        run: npm install

      - name: Ensure ESLint is installed
        working-directory: ./pablo-sand-box
        run: |
          npm config set registry https://registry.npmjs.org/
          npm install --save-dev eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin @angular-eslint/eslint-plugin @angular-eslint/template-parser

      - name: Run lint only on changed files
        working-directory: ./pablo-sand-box
        run: |
          BASE_REF="${{ github.event.pull_request.base.ref }}"
          git fetch origin $BASE_REF
          MERGE_BASE=$(git merge-base origin/$BASE_REF HEAD)
          CHANGED_FILES=$(git diff --name-only $MERGE_BASE..HEAD -- '*.ts' '*.html')

          EXISTING_FILES=""
          for file in $CHANGED_FILES; do
            if [ -f "$file" ]; then
              EXISTING_FILES="$EXISTING_FILES $file"
            fi
          done

          if [ -n "$EXISTING_FILES" ]; then
            echo "Linting existing changed files:"
            echo "$EXISTING_FILES"
            npx eslint $EXISTING_FILES --ext .ts,.html --max-warnings=0
          else
            echo "No valid TypeScript or HTML files to lint."
          fi
