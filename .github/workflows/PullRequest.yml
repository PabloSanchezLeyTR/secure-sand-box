name: Code Quality Checks

on:
  pull_request:
    branches:
      - main

jobs:
  # lint:
  #   runs-on: self-hosted

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0


  #     - name: Autenticación con JFrog (crear .npmrc dinámico)
  #       working-directory: ./pablo-sand-box
  #       run: |
  #         echo "@angular:registry=https://tr1.jfrog.io/tr1/api/npm/npm/" > .npmrc
  #         echo "@typescript-eslint:registry=https://tr1.jfrog.io/tr1/api/npm/npm/" >> .npmrc
  #         echo "@eslint:registry=https://tr1.jfrog.io/tr1/api/npm/npm/" >> .npmrc
  #         echo "registry=https://tr1.jfrog.io/tr1/api/npm/npm/" >> .npmrc
  #         echo "//tr1.jfrog.io/tr1/api/npm/npm/:_authToken=${{ secrets.JFROG_AUTH_TOKEN }}" >> .npmrc
  #         echo "//tr1.jfrog.io/tr1/api/npm/npm/:always-auth=true" >> .npmrc
  #         echo "email=${{ secrets.NPM_EMAIL }}" >> .npmrc

  #     - name: Copiar .npmrc al home del runner
  #       run: cp ./pablo-sand-box/.npmrc ~/.npmrc

  #     - name: Limpiar lockfile y node_modules
  #       working-directory: ./pablo-sand-box
  #       run: |
  #         rm -f package-lock.json
  #         rm -rf node_modules

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'

  #     - name: Install dependencies
  #       working-directory: ./pablo-sand-box
  #       run: npm install

  #     - name: Ensure ESLint is installed
  #       working-directory: ./pablo-sand-box
  #       run: |
  #         npm install --save-dev eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin @angular-eslint/eslint-plugin @angular-eslint/template-parser --userconfig=.npmrc

  #     - name: Run lint only on changed files
  #       working-directory: ./pablo-sand-box
  #       run: |
  #         BASE_REF="${{ github.event.pull_request.base.ref }}"
  #         git fetch origin $BASE_REF
  #         MERGE_BASE=$(git merge-base origin/$BASE_REF HEAD)
  #         CHANGED_FILES=$(git diff --name-only $MERGE_BASE..HEAD -- 'src/**/*.ts' 'src/**/*.html')

  #         echo "Archivos modificados detectados:"
  #         echo "$CHANGED_FILES"

  #         EXISTING_FILES=()
  #         for file in $CHANGED_FILES; do
  #           RELATIVE_FILE=$(echo "$file" | sed 's|^pablo-sand-box/||')
  #           if [ -f "$RELATIVE_FILE" ]; then
  #             EXISTING_FILES+=("$RELATIVE_FILE")
  #           fi
  #         done

  #         if [ ${#EXISTING_FILES[@]} -gt 0 ]; then
  #           echo "Linting existing changed files:"
  #           printf '%s\n' "${EXISTING_FILES[@]}"
  #           npx eslint "${EXISTING_FILES[@]}" --ext .ts,.html --max-warnings=0
  #         else
  #           echo "No valid TypeScript or HTML files to lint."
  #         fi

  axe-lint:
    runs-on: self-hosted

    steps:
      - name: Check out latest files
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Descargar binario de axe-linter desde Agora
        env:
          ARTIFACTORY_TOKEN_AXELINTER: ${{ secrets.ARTIFACTORY_TOKEN_AXELINTER }}
        run: |
          curl -L -H "X-JFrog-Art-Api: $ARTIFACTORY_TOKEN_AXELINTER" \
            -o axe-linter-connector-macos \
            "https://agora.dequecloud.com/artifactory/linter-bin/axe-linter-connector/4.10.9/packages/connector/pkgs/@axe-devtools/axe-linter-connector-macos"
          chmod +x axe-linter-connector-macos
          xattr -d com.apple.quarantine axe-linter-connector-macos || true

      - name: Levantar servidor Angular en segundo plano
        run: |
          nohup npx ng serve --port 4200 --disable-host-check > /dev/null 2>&1 &
          sleep 30  # espera a que el servidor esté listo

      - name: Verificar binario de axe-linter
        run: |
          ./axe-linter-connector-macos --version || echo "No se pudo obtener la versión"

      - name: Mostrar archivos incluidos en el análisis
        run: |
          echo "Archivos en source:"
          find ./pablo-sand-box/src -name "*.html"
          echo "Contenido de .axe-linter.yml:"
          cat ./pablo-sand-box/src/.axe-linter.yml


      - name: Mostrar estructura del repo con find
        run: |
          echo "Estructura del repo:"
          find . -type f | sort



      - name: Ejecutar axe-linter
        run: |
          mkdir -p ./dist/reports
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}..HEAD -- 'pablo-sand-box/src/**/*.html')
          if [ -z "$CHANGED_FILES" ]; then
            echo "No hay archivos HTML modificados en el PR."
            exit 0
          fi

          ./axe-linter-connector-macos \
            --reporter=sonarqube \
            --destination=./dist/reports \
            --filename=axe-report.json \
            --client-id=${{ secrets.NPM_EMAIL }} \
            --client-secret=${{ secrets.ARTIFACTORY_TOKEN_AXELINTER }} \
            --api-key=${{ secrets.AXE_LINTER_API_KEY }} \
            --source=./pablo-sand-box/src \
            --local \
            --tags=wcag2a,wcag2aa,best-practice \
            --debug

          echo "Validando errores de accesibilidad..."
          python3 <<EOF
          import json
          with open("dist/reports/axe-report.json") as f:
              report = json.load(f)
          issues = report.get("issues", [])
          if issues:
              for issue in issues:
                  loc = issue.get("primaryLocation", {})
                  print(f"- {loc.get('filePath')}: {issue.get('message')} [{issue.get('ruleId')}] ({issue.get('severity')})")
              raise SystemExit("❌ Fallo el chequeo de accesibilidad: se encontraron errores.")
          else:
              print("✅ No se encontraron errores de accesibilidad.")
          EOF



      - name: Mostrar contenido del reporte (debug temporal)
        run: |
          cat ./dist/reports/axe-report.json || echo "No se encontró el reporte"


      - name: Upload axe report
        env:
          NODE_TLS_REJECT_UNAUTHORIZED: 0
        uses: actions/upload-artifact@v4
        with:
          name: axe-accessibility-report
          path: ./dist/reports/axe-report.json




