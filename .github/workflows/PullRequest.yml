name: Code Quality Checks

on:
  pull_request:
    branches:
      - main

jobs:
  # lint:
  #   runs-on: self-hosted

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0


  #     - name: Autenticación con JFrog (crear .npmrc dinámico)
  #       working-directory: ./pablo-sand-box
  #       run: |
  #         echo "@angular:registry=https://tr1.jfrog.io/tr1/api/npm/npm/" > .npmrc
  #         echo "@typescript-eslint:registry=https://tr1.jfrog.io/tr1/api/npm/npm/" >> .npmrc
  #         echo "@eslint:registry=https://tr1.jfrog.io/tr1/api/npm/npm/" >> .npmrc
  #         echo "registry=https://tr1.jfrog.io/tr1/api/npm/npm/" >> .npmrc
  #         echo "//tr1.jfrog.io/tr1/api/npm/npm/:_authToken=${{ secrets.JFROG_AUTH_TOKEN }}" >> .npmrc
  #         echo "//tr1.jfrog.io/tr1/api/npm/npm/:always-auth=true" >> .npmrc
  #         echo "email=${{ secrets.NPM_EMAIL }}" >> .npmrc

  #     - name: Copiar .npmrc al home del runner
  #       run: cp ./pablo-sand-box/.npmrc ~/.npmrc

  #     - name: Limpiar lockfile y node_modules
  #       working-directory: ./pablo-sand-box
  #       run: |
  #         rm -f package-lock.json
  #         rm -rf node_modules

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'

  #     - name: Install dependencies
  #       working-directory: ./pablo-sand-box
  #       run: npm install

  #     - name: Ensure ESLint is installed
  #       working-directory: ./pablo-sand-box
  #       run: |
  #         npm install --save-dev eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin @angular-eslint/eslint-plugin @angular-eslint/template-parser --userconfig=.npmrc

  #     - name: Run lint only on changed files
  #       working-directory: ./pablo-sand-box
  #       run: |
  #         BASE_REF="${{ github.event.pull_request.base.ref }}"
  #         git fetch origin $BASE_REF
  #         MERGE_BASE=$(git merge-base origin/$BASE_REF HEAD)
  #         CHANGED_FILES=$(git diff --name-only $MERGE_BASE..HEAD -- 'src/**/*.ts' 'src/**/*.html')

  #         echo "Archivos modificados detectados:"
  #         echo "$CHANGED_FILES"

  #         EXISTING_FILES=()
  #         for file in $CHANGED_FILES; do
  #           RELATIVE_FILE=$(echo "$file" | sed 's|^pablo-sand-box/||')
  #           if [ -f "$RELATIVE_FILE" ]; then
  #             EXISTING_FILES+=("$RELATIVE_FILE")
  #           fi
  #         done

  #         if [ ${#EXISTING_FILES[@]} -gt 0 ]; then
  #           echo "Linting existing changed files:"
  #           printf '%s\n' "${EXISTING_FILES[@]}"
  #           npx eslint "${EXISTING_FILES[@]}" --ext .ts,.html --max-warnings=0
  #         else
  #           echo "No valid TypeScript or HTML files to lint."
  #         fi

  axe-lint:
    runs-on: self-hosted

    steps:
      - name: Check out latest files
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Descargar binario de axe-linter desde Agora
        env:
          ARTIFACTORY_TOKEN_AXELINTER: ${{ secrets.ARTIFACTORY_TOKEN_AXELINTER }}
        run: |
          curl -L -H "X-JFrog-Art-Api: $ARTIFACTORY_TOKEN_AXELINTER" \
            -o axe-linter-connector-macos \
            "https://agora.dequecloud.com/artifactory/linter-bin/axe-linter-connector/4.10.9/packages/connector/pkgs/@axe-devtools/axe-linter-connector-macos"
          chmod +x axe-linter-connector-macos
          xattr -d com.apple.quarantine axe-linter-connector-macos || true

# Opcional: ver ayuda y (si existe) lista de reporters soportados.
      - name: Mostrar ayuda del conector (opcional)
        run: |
          ./axe-linter-connector-macos --help || true
          ./axe-linter-connector-macos --help-reporters || true
          ./axe-linter-connector-macos --list-reporters || true



      - name: Mover .axe-linter.yml a la raíz del proyecto
        run: |
          if [ -f "./pablo-sand-box/src/.axe-linter.yml" ]; then
            mv ./pablo-sand-box/src/.axe-linter.yml ./pablo-sand-box/.axe-linter.yml
          fi
          echo "Usando config en: ./pablo-sand-box/.axe-linter.yml"
          cat ./pablo-sand-box/.axe-linter.yml || true

      - name: Levantar servidor Angular en segundo plano (opcional)
        run: |
          nohup npx ng serve --port 4200 --disable-host-check > /dev/null 2>&1 &
          # Health check (no falla el job si no levanta; es para debug y posible uso por URL)
          for i in {1..60}; do
            if curl -sSf http://localhost:4200 >/dev/null; then echo "Angular OK"; break; fi
            sleep 2
          done
        continue-on-error: true

          # Opcional: ver ayuda y (si existe) lista de reporters soportados.
      - name: Mostrar ayuda del conector (opcional)
        run: |
          ./axe-linter-connector-macos --help || true
          ./axe-linter-connector-macos --help-reporters || true
          ./axe-linter-connector-macos --list-reporters || true

      - name: Verificar binario de axe-linter
        run: ./axe-linter-connector-macos --version || echo "No se pudo obtener la versión"

      - name: Ejecutar axe-linter (local, SonarQube)
        working-directory: ./pablo-sand-box
        run: |
          mkdir -p ./dist/reports
          ../axe-linter-connector-macos \
            --reporter=sonarqube \
            --destination=./dist/reports \
            --filename=axe-report.json \
            --client-id='${{ secrets.NPM_EMAIL }}' \
            --client-secret='${{ secrets.ARTIFACTORY_TOKEN_AXELINTER }}' \
            --api-key='${{ secrets.AXE_LINTER_API_KEY }}' \
            --source=http://localhost:4200 \
            --debug


      - name: Mostrar contenido de reportes (debug)
        run: |
          echo "Reporte SonarQube:"
          cat ./pablo-sand-box/dist/reports/axe-report.json || echo "No se encontró axe-report.json"
          echo "Reporte RAW:"
          cat ./pablo-sand-box/dist/reports/axe-report-raw.json || echo "No se encontró axe-report-raw.json"

      - name: Upload axe reports
        uses: actions/upload-artifact@v4
        with:
          name: axe-accessibility-reports
          path: |
            ./pablo-sand-box/dist/reports/axe-report.json
            ./pablo-sand-box/dist/reports/axe-report-raw.json


