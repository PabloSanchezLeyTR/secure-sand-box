name: CI Install JFrog & Agora Packages Without .npmrc

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted # O usa ubuntu-latest si tu runner es cloud

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

          # Instalación SOLO del paquete de Agora (NO usa .npmrc, solo env)
      - name: Install @axe-devtools/axe-linter-connector from Agora
        env:
          "npm_config_@axe-devtools:registry": "https://agora.dequecloud.com/artifactory/api/npm/devtools-npm/"
          "npm_config_//agora.dequecloud.com/artifactory/api/npm/devtools-npm/:_auth": ${{ secrets.AGORA_NPM_AUTH }}
          "npm_config_//agora.dequecloud.com/artifactory/api/npm/devtools-npm/:email": ${{ secrets.NPM_EMAIL }}
          "npm_config_//agora.dequecloud.com/artifactory/api/npm/devtools-npm/:always-auth": "true"
        run: |
          npm install @axe-devtools/axe-linter-connector --registry=https://agora.dequecloud.com/artifactory/api/npm/devtools-npm/



      # Instalación de TODAS las dependencias desde JFrog (usa tu package.json)
      - name: Install dependencies from JFrog
        env:
            "npm_config_registry": "https://tr1.jfrog.io/artifactory/api/npm/npm/"
            "npm_config_//tr1.jfrog.io/artifactory/api/npm/npm/:_authToken": ${{ secrets.JFROG_AUTH_TOKEN }}
            "npm_config_//tr1.jfrog.io/artifactory/api/npm/npm/:always-auth": "true"
        run: npm ci

      - name: Install Angular CLI
        run: npm install -g @angular/cli
      
      - name: Build Angular project
        run: ng build --output-path docs --base-href /pablo-sand-box/
        working-directory: ./pablo-sand-box

      - name: List build output (debug)
        run: ls -lh docs || echo "No se generó docs"

      - name: Deploy to GitHub Pages (gh-pages branch)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs