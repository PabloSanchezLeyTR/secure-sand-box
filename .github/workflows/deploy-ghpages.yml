name: CI Install JFrog & Agora Packages Without .npmrc

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

permissions:
  contents: write

jobs:
  build:
    if: github.event_name == 'push'
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install @axe-devtools/axe-linter-connector from Agora
        env:
          "npm_config_@axe-devtools:registry": "https://agora.dequecloud.com/artifactory/api/npm/devtools-npm/"
          "npm_config_//agora.dequecloud.com/artifactory/api/npm/devtools-npm/:_auth": ${{ secrets.AGORA_NPM_AUTH }}
          "npm_config_//agora.dequecloud.com/artifactory/api/npm/devtools-npm/:email": ${{ secrets.NPM_EMAIL }}
          "npm_config_//agora.dequecloud.com/artifactory/api/npm/devtools-npm/:always-auth": "true"
        run: |
          npm install @axe-devtools/axe-linter-connector --registry=https://agora.dequecloud.com/artifactory/api/npm/devtools-npm/
        working-directory: ./pablo-sand-box

      - name: Install dependencies from JFrog
        env:
            "npm_config_registry": "https://tr1.jfrog.io/artifactory/api/npm/npm/"
            "npm_config_//tr1.jfrog.io/artifactory/api/npm/npm/:_authToken": ${{ secrets.JFROG_AUTH_TOKEN }}
            "npm_config_//tr1.jfrog.io/artifactory/api/npm/npm/:always-auth": "true"
        run: npm ci
        working-directory: ./pablo-sand-box

      - name: Install Angular CLI
        run: npm install -g @angular/cli
        working-directory: ./pablo-sand-box
      
      - name: Build Angular project
        run: ng build --output-path docs --base-href /secure-sand-box/
        working-directory: ./pablo-sand-box

      - name: Build React project (Next.js static export y debug)
        run: |
          if [ -d ./pablo-sand-box/checkbox-ui ]; then
            cd ./pablo-sand-box/checkbox-ui
            npm install || true
            npm run build || true
            if [ -d out ]; then
              echo "Contenido de out/ tras next build (output: export):"
              ls -l out
              mkdir -p ../../docs/checkbox-ui
              cp -r out/* ../../docs/checkbox-ui
              echo "Copiado desde out/"
            else
              echo "No se generó la carpeta out/"
            fi
            cd -
          else
            echo "React folder not found, skipping build."
          fi
      - name: Debug archivos estáticos React
        run: |
          echo "Archivos en docs/checkbox-ui:"
          ls -l ./pablo-sand-box/docs/checkbox-ui || true
          if [ -f ./pablo-sand-box/docs/checkbox-ui/index.html ]; then
            echo "index.html encontrado en docs/checkbox-ui"
          else
            echo "index.html NO encontrado en docs/checkbox-ui"
          fi
        shell: bash

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && success()
        uses: peaceiris/actions-gh-pages@v4
        with:
            github_token: ${{ secrets.GH_PAGES_TOKEN }}
            publish_dir: ./pablo-sand-box/docs
            publish_branch: gh-pages



  delete-branch:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Delete branch after PR merge (except main, master, gh-pages)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ github.event.pull_request.head.ref }}
          REPO: ${{ github.repository }}
        run: |
          if [[ "$BRANCH" != "main" && "$BRANCH" != "master" && "$BRANCH" != "gh-pages" ]]; then
            echo "Deleting branch $BRANCH from $REPO"
            curl -s -X DELETE \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$REPO/git/refs/heads/$BRANCH
          else
            echo "Not deleting protected branch: $BRANCH"
          fi